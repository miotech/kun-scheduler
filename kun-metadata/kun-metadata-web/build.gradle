plugins {
    id 'java'
}

sourceSets {
    main {
        output.resourcesDir = file("${java.outputDir}/../resources")
    }
}

dependencies {
    implementation project(':kun-app-common')
    implementation project(":kun-commons:kun-commons-db")
    implementation project(":kun-commons:kun-commons-testing")
    implementation project(":kun-commons:kun-commons-utils")
    implementation project(":kun-commons:kun-commons-web")
    implementation project(":kun-commons:kun-commons-rpc")
    implementation project(":kun-metadata:kun-metadata-core")
    implementation project(":kun-metadata:kun-metadata-common")
    implementation project(":kun-metadata:kun-metadata-databuilder")
    implementation project(":kun-metadata:kun-metadata-service-facade")
    implementation project(":kun-workflow:kun-workflow-core")
    implementation project(":kun-workflow:kun-workflow-utils")
    implementation project(':kun-workflow:kun-workflow-facade')

    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation "org.eclipse.jetty:jetty-server"
    implementation "org.eclipse.jetty:jetty-servlet"
    implementation "org.eclipse.jetty:jetty-util"
    implementation "org.eclipse.jetty:jetty-webapp"
    implementation "org.yaml:snakeyaml"
    implementation 'com.google.guava:guava'
    implementation "com.amazonaws:aws-java-sdk-glue"
    implementation "com.h2database:h2"
    implementation "com.zaxxer:HikariCP"
    implementation "org.flywaydb:flyway-core"
    implementation "org.jooq:joor-java-8"
    implementation "org.apache.dubbo:dubbo"
    implementation 'org.apache.dubbo:dubbo-registry-redis'
    implementation "org.apache.commons:commons-pool2"
    implementation "org.apache.kafka:kafka-clients"
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.googlecode.json-simple:json-simple'

    testImplementation "junit:junit"
    testRuntimeOnly "org.mockito:mockito-core"
    testImplementation project(":kun-workflow:kun-workflow-testing")
}

task buildOperator (type:Exec){
    workingDir "../../"
    commandLine "./gradlew",":kun-metadata:kun-metadata-databuilder:shadowJar"
}


task copyMCEOperator(type: Copy){
    from "../kun-metadata-databuilder/build/libs/databuilder-operator-1.0.jar"
    rename {
        "mce-operator.jar"
    }
    into "src/main/resources"
    dependsOn(buildOperator)
}

task copyMSEOperator(type: Copy){
    from "../kun-metadata-databuilder/build/libs/databuilder-operator-1.0.jar"
    rename {
        "mse-operator.jar"
    }
    into "src/main/resources"
    dependsOn(buildOperator)
}

compileJava.dependsOn(copyMCEOperator, copyMSEOperator)

jacocoTestReport {

    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/**operator.jar'])
        }))
    }
}
