jar {
    from { (configurations.runtime).collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    zip64=true

}

dependencies {
    implementation project(":kun-commons:kun-commons-db")
    implementation project(":kun-commons:kun-commons-utils")
    implementation project(":kun-commons:kun-commons-rpc")
    implementation project(":kun-commons:kun-commons-pubsub")
    implementation project(":kun-workflow:kun-workflow-core")
    implementation project(":kun-workflow:kun-workflow-common")
    implementation project(":kun-workflow:kun-workflow-utils")
    implementation project(':kun-workflow:kun-workflow-facade')
    implementation project(':kun-workflow:kun-workflow-scheduler')
    implementation project(':kun-metadata:kun-metadata-core')
    implementation project(':kun-metadata:kun-metadata-service-facade')
    implementation project(':kun-workflow:kun-workflow-worker')
    implementation 'io.fabric8:kubernetes-client'
    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation 'org.jooq:joor-java-8'
    implementation 'com.google.inject.extensions:guice-assistedinject'
    runtimeOnly 'io.grpc:grpc-netty-shaded'
    implementation 'io.grpc:grpc-protobuf'
    implementation 'io.grpc:grpc-stub'

    testImplementation project(":kun-commons:kun-commons-testing")
    testImplementation project(":kun-workflow:kun-workflow-testing")
    testImplementation project(":kun-workflow:kun-workflow-scheduler")
    testImplementation "org.testcontainers:neo4j"
    testImplementation "org.neo4j:neo4j-ogm-core"
    testImplementation "com.github.stefanbirkner:system-rules:1.19.0"
    testImplementation "org.testcontainers:testcontainers"
    testImplementation 'uk.org.lidalia:slf4j-test:1.2.0'
    testImplementation 'io.fabric8:kubernetes-server-mock'
    testImplementation "com.zaxxer:HikariCP"
    testImplementation "net.bytebuddy:byte-buddy"
    testImplementation "org.testcontainers:postgresql"
    testImplementation 'org.postgresql:postgresql'
}
