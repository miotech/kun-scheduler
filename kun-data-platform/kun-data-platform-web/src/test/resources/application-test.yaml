testenv: true

server:
  port: ${SERVER_PORT}

workflow:
  enabled: false
  baseUrl: ${WORKFLOW_URL:}
  variableNamespace: dataplatform

data-discovery:
  baseUrl: https://kun-dev.miotech.com

spring:
  datasource:
    url: jdbc:h2:mem:test;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE
    username: sa
    password:
    driverClassName: org.h2.Driver
    hikari:
      connection-init-sql: CREATE DOMAIN IF NOT EXISTS  "JSONB" AS TEXT

  session:
    jdbc:
      initialize-schema: always
      table-name: kun_user_session

  flyway:
    # 启用或禁用 flyway
    enabled: true
    clean-disabled: true
    locations: classpath:sql
    table: flyway_kun_dp_schema_history
    schemas: public

security:
  datasource:
    url: jdbc:h2:mem:test;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE
    username: sa
    password:
    driverClassName: org.h2.Driver
    configuration:
      connection-init-sql: create table if not exists kun_user (id bigint not null constraint kun_user_pk primary key,name varchar(100) not null)

notify:
  systemDefault:
    triggerType: ON_FAIL
    userConfigJson: '[{"notifierType": "WECOM"}]'
  email:
    smtpHost: 0.0.0.0
    smtpPort: 25
    smtpUsername: kun-robot
    smtpPassword: kun-robot-password
    emailFrom: foo@bar.com
    emailFromName: kun-robot
  urlLink:
    enabled: true
    prefix: https://example.org
