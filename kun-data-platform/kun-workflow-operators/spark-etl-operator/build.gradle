buildscript {
    ext {
        scalaVersion = '2.11.12'
        scalaMinor = '2.11'
        slf4jVersion = '1.7.25'
        logbackVersion = '1.2.3'
        hadoopVersion = '2.8.3'
        sparkArtifact = '2.11'
        sparkVersion = '2.3.2'
        esVersion = '6.5.4'
        mongoSparkVersion = '2.2.3'
        mysqlVersion = '8.0.11'
        postgresqlVersion = '42.2.5'
        arangoVersion = '1.0.13'
        testcontainersVersion = '1.14.3'
    }

    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow'
    id 'scala'
}

configurations {
    testCompileOnly.extendsFrom compileOnly
}

dependencies {
    compileOnly "org.scala-lang:scala-library:${scalaVersion}"
    compileOnly "org.scala-lang:scala-reflect:${scalaVersion}"
    compileOnly "org.apache.hadoop:hadoop-common:${hadoopVersion}"
    compileOnly "org.apache.spark:spark-core_${sparkArtifact}:${sparkVersion}"
    compileOnly "org.apache.spark:spark-sql_${sparkArtifact}:${sparkVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    implementation "com.typesafe:config:1.3.3"
    implementation "com.github.scopt:scopt_2.11:3.7.0"
    implementation "commons-httpclient:commons-httpclient:3.1"
    implementation "org.apache.commons:commons-lang3:3.0"
    implementation "org.apache.commons:commons-lang3:3.5"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "org.elasticsearch:elasticsearch-hadoop:${esVersion}"
    implementation "org.elasticsearch.client:elasticsearch-rest-high-level-client:${esVersion}"
    implementation "com.microsoft.sqlserver:mssql-jdbc:6.4.0.jre8"
    implementation "mysql:mysql-connector-java:${mysqlVersion}"
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "com.arangodb:arangodb-spark-connector_2.11:${arangoVersion}"
    implementation "org.mongodb.spark:mongo-spark-connector_${sparkArtifact}:${mongoSparkVersion}"

    testImplementation "junit:junit"
    testImplementation "org.scalatest:scalatest_${scalaMinor}:3.2.0"
    testImplementation "org.scalatest:scalatest-core_${scalaMinor}:3.2.0"
    testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
    testImplementation "org.testcontainers:mysql:${testcontainersVersion}"
    testImplementation "org.testcontainers:elasticsearch:${testcontainersVersion}"
    testImplementation "org.testcontainers:mongodb:${testcontainersVersion}"
    testImplementation "org.mockito:mockito-core:3.3.3"
}

shadowJar {
    baseName = 'spark-etl-operator'
    classifier = null

    manifest {
        attributes(
                'Main-Class': 'com.miotech.spark.etl.Application'
        )
    }
    zip64 true
}