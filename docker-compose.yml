version: "3.3"
services:
  kun-postgres:
    image: "postgres:11.5"
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
    restart: always
    volumes:
      - ./docker_init_db.sql:/docker-entrypoint-initdb.d/docker_init_db.sql
    ports:
      - 5433:5432
  kun-redis:
    image: "redis:6.0.8"
    restart: always
    volumes:
      - ./redis_data:/data
    ports:
      - 6379:6379
  kun-neo4j:
    image: "neo4j:3.5.22"
    restart: always
    volumes:
      - ./neo4j_data:/data
    ports:
      - 7474:7474
      - 7687:7687
  kun-security:
    image: "${IMAGE_REMOTE_ORG}kun-security:master"
    environment:
      APP_CONFIG_ENV:
      SECURITY_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
    restart: always
    volumes:
      - ./kun-security-logs:/server/target/kun-security-logs/:z
    ports:
      - 8079:${SECURITY_PORT}
    depends_on:
      - kun-postgres
  kun-workflow:
    image: "${IMAGE_REMOTE_ORG}kun-workflow:master"
    environment:
      APP_CONFIG_ENV:
      WORKFLOW_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      WORKFLOW_RPC_SERVICE_PORT:
      DB_NEO4J_AUTH:
      DB_NEO4J_USERNAME:
      DB_NEO4J_PASSWORD:
      DB_NEO4J_IP:
      DB_REDIS_IP:
    restart: always
    volumes:
      - ./kun-workflow-logs:/server/target/kun-workflow-logs/:z
    ports:
      - 8088:${WORKFLOW_PORT}
    depends_on:
      - kun-postgres
  kun-metadata:
    image: "${IMAGE_REMOTE_ORG}kun-metadata:master"
    environment:
      APP_CONFIG_ENV:
      METADATA_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
      METADATA_RPC_SERVICE_PORT:
      DB_REDIS_IP:
    restart: always
    volumes:
      - ./kun-metadata-logs:/server/target/kun-metadata-logs/:z
    ports:
      - 8084:${METADATA_PORT}
    depends_on:
      - kun-workflow
  kun-data-dashboard:
    image: "${IMAGE_REMOTE_ORG}kun-data-dashboard:master"
    environment:
      APP_CONFIG_ENV:
      DATA_DASHBOARD_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      SECURITY_HOST:
      SECURITY_PORT:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
    restart: always
    volumes:
      - ./kun-data-dashboard-logs:/server/target/kun-data-dashboard-logs/:z
    ports:
      - 8083:${DATA_DASHBOARD_PORT}
    depends_on:
      - kun-workflow
  kun-data-discovery:
    image: "${IMAGE_REMOTE_ORG}kun-data-discovery:master"
    environment:
      APP_CONFIG_ENV:
      DATA_DISCOVERY_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      SECURITY_HOST:
      SECURITY_PORT:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
      METADATA_HOST:
      METADATA_PORT:
    restart: always
    volumes:
      - ./kun-data-discovery-logs:/server/target/kun-data-discovery-logs/:z
    ports:
      - 8080:${DATA_DISCOVERY_PORT}
    depends_on:
      - kun-metadata
  kun-data-platform:
    image: "${IMAGE_REMOTE_ORG}kun-data-platform:master"
    environment:
      APP_CONFIG_ENV:
      DATA_PLATFORM_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      SECURITY_HOST:
      SECURITY_PORT:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
    restart: always
    volumes:
      - ./kun-data-platform-logs:/server/target/kun-data-platform-logs/:z
    ports:
      - 8081:${DATA_PLATFORM_PORT}
    depends_on:
      - kun-workflow
  kun-frontend:
    image: "${IMAGE_REMOTE_ORG}kun-frontend:master"
    environment:
      SECURITY_HOST:
      SECURITY_PORT:
      DATA_DISCOVERY_HOST:
      DATA_DISCOVERY_PORT:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
      DATA_PLATFORM_HOST:
      DATA_PLATFORM_PORT:
      DATA_DASHBOARD_HOST:
      DATA_DASHBOARD_PORT:
    restart: always
    ports:
      - 9802:80
    depends_on:
      - kun-data-discovery
