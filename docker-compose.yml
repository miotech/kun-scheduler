version: "3.3"
services:
  kun-postgres:
    image: "postgres:11.5"
    environment:
      TZ:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
    restart: always
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
      - ./docker_init_db.sql:/docker-entrypoint-initdb.d/docker_init_db.sql
    ports:
      - 15432:${DB_PG_PORT}
  kun-redis:
    image: "redis:6.0.8"
    restart: always
    volumes:
      - ./data/redis/data:/data
    ports:
      - 16379:${DB_REDIS_PORT}
  kun-neo4j:
    image: "neo4j:3.5.22"
    environment:
      TZ:
      NEO4J_AUTH: none
    restart: always
    volumes:
      - ./data/neo4j/data:/data
    ports:
      - 17687:${DB_NEO4J_PORT}
  kun-security:
    image: "${IMAGE_REMOTE_ORG}kun-security:master"
    environment:
      TZ:
      APP_CONFIG_ENV:
      SPRING_PROFILES_ACTIVE:
      SECURITY_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
    restart: always
    volumes:
      - ./logs/kun-security:/server/target/kun-security-logs/:z
    ports:
      - ${SECURITY_PORT}:${SECURITY_PORT}
    depends_on:
      - kun-postgres
      - kun-neo4j
  kun-workflow:
    image: "${IMAGE_REMOTE_ORG}kun-workflow:master"
    environment:
      TZ:
      APP_CONFIG_ENV:
      SPRING_PROFILES_ACTIVE:
      WORKFLOW_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      WORKFLOW_RPC_SERVICE_PORT:
      DB_NEO4J_IP:
      DB_NEO4J_PORT:
      DB_REDIS_IP:
      DB_REDIS_PORT:
    restart: always
    volumes:
      - ./data/kun-workflow/data:/data
      - ./logs/kun-workflow:/server/target/kun-workflow-logs/:z
    ports:
      - ${WORKFLOW_PORT}:${WORKFLOW_PORT}
    depends_on:
      - kun-postgres
      - kun-neo4j
      - kun-redis
  kun-metadata:
    image: "${IMAGE_REMOTE_ORG}kun-metadata:master"
    environment:
      TZ:
      APP_CONFIG_ENV:
      SPRING_PROFILES_ACTIVE:
      METADATA_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
      DATA_DISCOVERY_HOST:
      DATA_DISCOVERY_PORT:
      METADATA_RPC_SERVICE_PORT:
      DB_NEO4J_IP:
      DB_NEO4J_PORT:
      DB_REDIS_IP:
      DB_REDIS_PORT:
    restart: always
    volumes:
      - ./logs/kun-metadata:/server/target/kun-metadata-logs/:z
    ports:
      - ${METADATA_PORT}:${METADATA_PORT}
    depends_on:
      - kun-workflow
      - kun-neo4j
      - kun-redis
  kun-data-dashboard:
    image: "${IMAGE_REMOTE_ORG}kun-data-dashboard:master"
    environment:
      TZ:
      APP_CONFIG_ENV:
      SPRING_PROFILES_ACTIVE:
      DATA_DASHBOARD_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      SECURITY_HOST:
      SECURITY_PORT:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
    restart: always
    volumes:
      - ./logs/kun-data-dashboard:/server/target/kun-data-dashboard-logs/:z
    ports:
      - ${DATA_DASHBOARD_PORT}:${DATA_DASHBOARD_PORT}
    depends_on:
      - kun-workflow
      - kun-metadata
  kun-data-discovery:
    image: "${IMAGE_REMOTE_ORG}kun-data-discovery:master"
    environment:
      TZ:
      APP_CONFIG_ENV:
      SPRING_PROFILES_ACTIVE:
      DATA_DISCOVERY_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      SECURITY_HOST:
      SECURITY_PORT:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
      METADATA_HOST:
      METADATA_PORT:
    restart: always
    volumes:
      - ./logs/kun-data-discovery:/server/target/kun-data-discovery-logs/:z
    ports:
      - ${DATA_DISCOVERY_PORT}:${DATA_DISCOVERY_PORT}
    depends_on:
      - kun-metadata
  kun-data-platform:
    image: "${IMAGE_REMOTE_ORG}kun-data-platform:master"
    environment:
      TZ:
      APP_CONFIG_ENV:
      SPRING_PROFILES_ACTIVE:
      DATA_PLATFORM_PORT:
      DB_PG_IP:
      DB_PG_PORT:
      DB_PG_USERNAME:
      DB_PG_PASSWORD:
      DB_REDIS_IP:
      DB_REDIS_PORT:
      SECURITY_HOST:
      SECURITY_PORT:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
    restart: always
    volumes:
      - ./logs/kun-data-platform:/server/target/kun-data-platform-logs/:z
    ports:
      - ${DATA_PLATFORM_PORT}:${DATA_PLATFORM_PORT}
    depends_on:
      - kun-workflow
  kun-frontend:
    image: "${IMAGE_REMOTE_ORG}kun-frontend:master"
    environment:
      TZ:
      SECURITY_HOST:
      SECURITY_PORT:
      DATA_DISCOVERY_HOST:
      DATA_DISCOVERY_PORT:
      WORKFLOW_HOST:
      WORKFLOW_PORT:
      DATA_PLATFORM_HOST:
      DATA_PLATFORM_PORT:
      DATA_DASHBOARD_HOST:
      DATA_DASHBOARD_PORT:
    restart: always
    ports:
      - 8080:80
    depends_on:
      - kun-data-discovery
