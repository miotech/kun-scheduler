server:
  port: ${KUN_APP_PORT}

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_PG_IP}:${DB_PG_PORT}/kun
    username: ${DB_PG_USERNAME}
    password: ${DB_PG_PASSWORD}

  session:
    jdbc:
      initialize-schema: never
      table-name: kun_user_session
    timeout: 30d

  flyway:
    enabled: true
    clean-disabled: true
    locations: classpath:db/migration
    table: flyway_kun_app_schema_history
    baseline-on-migrate: true
    baseline-version: 0
    encoding: UTF-8
    out-of-order: false
    schemas: public
    validate-on-migrate: true

security:
  base-url: http://${SECURITY_HOST}:${SECURITY_PORT}/kun/api/v1

metadata:
  base-url: http://${KUN_INFRA_HOST}:${KUN_INFRA_PORT}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_PG_IP}:${DB_PG_PORT}/kun
    username: ${DB_PG_USERNAME}
    password: ${DB_PG_PASSWORD}

workflow:
  enable: ${WORKFLOW_ENABLE:true}
  base-url: http://${KUN_INFRA_HOST}:${KUN_INFRA_PORT}

data-quality:
  workflow:
    task:
      cron: 0 0 0 * * ?

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    elasticsearch:
      enabled: false
    ldap:
      enabled: false

springdoc:
  swagger-ui:
    operationsSorter: method
  use-fqn: true

redis:
  host: ${DB_REDIS_IP}
  notify-channel: kun-notify
