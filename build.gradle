buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.bmuschko:gradle-docker-plugin:6.4.0"
    }
}

plugins {
    id 'com.github.ksoichiro.console.reporter' version '0.6.2'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }

    compileJava {
        options.compilerArgs << "-parameters"
    }

    compileTestJava {
        options.compilerArgs << "-parameters"
    }
}

subprojects {
    test {
        finalizedBy jacocoTestReport
    }

    group = 'com.miotech'
    version = rootProject.version

    plugins.withType(JavaPlugin) {
        sourceCompatibility = JavaVersion.VERSION_1_8

        dependencies {
            constraints {
                implementation "com.google.inject:guice:4.2.3"
                implementation 'com.google.guava:guava:28.2-jre'
                implementation "org.slf4j:slf4j-api:1.7.30"
                implementation "commons-dbutils:commons-dbutils:1.7"
                implementation 'org.apache.commons:commons-lang3:3.10'
                implementation 'org.apache.commons:commons-collections4:4.4'
                implementation 'org.apache.commons:commons-email:1.5'
                implementation 'commons-io:commons-io:2.8.0'
                implementation "com.zaxxer:HikariCP:3.4.5"
                implementation 'ch.qos.logback:logback-classic:1.2.3'
                implementation "org.yaml:snakeyaml:1.21"
                implementation "com.fasterxml.jackson.core:jackson-core:2.11.0"
                implementation "com.fasterxml.jackson.core:jackson-databind:2.11.0"
                implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.0'
                implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0'
                implementation "org.eclipse.jetty:jetty-server:9.4.28.v20200408"
                implementation "org.eclipse.jetty:jetty-servlet:9.4.28.v20200408"
                implementation "org.eclipse.jetty:jetty-util:9.4.28.v20200408"
                implementation "org.eclipse.jetty:jetty-webapp:9.4.28.v20200408"
                implementation 'com.typesafe:config:1.4.0'
                implementation 'org.json:json:20190722'
                implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:6.6.1'
                implementation 'org.apache.commons:commons-lang3:3.9'
                implementation 'org.postgresql:postgresql:42.2.5'
                implementation 'org.apache.hive:hive-jdbc:2.3.4'
                implementation 'mysql:mysql-connector-java:5.1.46'
                implementation "org.flywaydb:flyway-core:6.4.2"
                implementation "org.apache.curator:curator-recipes:4.2.0"
                implementation "io.prestosql:presto-jdbc:333"
                implementation "org.mongodb:mongo-java-driver:3.6.3"
                implementation "com.amazonaws:aws-java-sdk-glue:1.11.792"
                implementation "com.syncron.amazonaws:simba-athena-jdbc-driver:2.0.2"
                implementation "com.arangodb:arangodb-java-driver:5.0.4"
                implementation "org.apache.kafka:kafka-clients:2.5.0"
                implementation "com.h2database:h2:1.4.200"
                implementation "com.cronutils:cron-utils:9.0.2"
                implementation 'org.apache.httpcomponents:httpclient:4.5.12'
                implementation 'org.apache.httpcomponents:httpmime:4.5.12'
                implementation "org.postgresql:postgresql:42.2.14"
                implementation 'com.squareup.okhttp3:okhttp:3.14.9'
                implementation 'com.googlecode.json-simple:json-simple:1.1.1'
                implementation "org.ow2.asm:asm:8.0.1"
                implementation "org.ow2.asm:asm-commons:8.0.1"
                implementation 'commons-fileupload:commons-fileupload:1.4'
                implementation "org.jooq:joor-java-8:0.9.12"
                implementation "org.neo4j:neo4j-ogm-core:3.2.16"
                implementation "org.apache.dubbo:dubbo:2.7.8"
                implementation 'org.apache.dubbo:dubbo-registry-redis:2.7.8'
                implementation 'org.apache.dubbo:dubbo-spring-boot-starter:2.7.8'
                implementation 'com.alibaba:druid:1.1.23'
                implementation 'org.springdoc:springdoc-openapi-ui:1.4.8'
                implementation 'redis.clients:jedis:2.9.0'
                implementation 'org.jooq:joor-java-8:0.9.13'
                implementation "com.amazonaws:aws-java-sdk-s3:1.11.792"
                implementation 'org.apache.hadoop:hadoop-aws:2.8.5'

                testImplementation "junit:junit:4.12"
                testImplementation 'org.apache.httpcomponents:httpclient:4.5.12'
                testImplementation "org.hamcrest:hamcrest:2.2"
                testImplementation "org.hamcrest:hamcrest-library:1.3"
                testImplementation 'com.shazam:shazamcrest:0.11'
                testImplementation "org.mockito:mockito-core:3.3.3"
                testImplementation "org.awaitility:awaitility:4.0.3"
                testImplementation "net.bytebuddy:byte-buddy:1.10.10"
                testImplementation "org.testcontainers:testcontainers:1.15.0-rc2"
                testImplementation "org.testcontainers:mongodb:1.15.0-rc2"
                testImplementation "org.testcontainers:postgresql:1.15.0-rc2"
                testImplementation "org.testcontainers:elasticsearch:1.15.0-rc2"
                testImplementation "org.testcontainers:neo4j:1.15.0-rc2"
                testImplementation "com.github.goodforgod:arangodb-testcontainer:1.2.0"
                testImplementation "org.mock-server:mockserver-netty:3.10.8"
                testImplementation "org.mock-server:mockserver-client-java:3.10.8"
                testImplementation 'org.apache.dubbo:dubbo-registry-default:2.7.8'
                testImplementation 'uk.org.lidalia:slf4j-test:1.2.0'
                testImplementation 'com.icegreen:greenmail:1.6.2'
                testImplementation 'com.icegreen:greenmail-junit4:1.6.2'
                testImplementation 'com.icegreen:greenmail-spring:1.6.2'
            }

            implementation "com.google.inject:guice"
            implementation "org.slf4j:slf4j-api"
            implementation 'ch.qos.logback:logback-classic'
            implementation 'org.apache.commons:commons-lang3'
            implementation 'org.apache.commons:commons-collections4'

            testImplementation "junit:junit"
            testImplementation "org.hamcrest:hamcrest"
            testImplementation "org.hamcrest:hamcrest-library"
            testImplementation 'com.shazam:shazamcrest'
            testImplementation "org.mockito:mockito-core"
            testImplementation "org.awaitility:awaitility"
        }
    }
}

// Referenced from: https://gist.github.com/aalmiray/e6f54aa4b3803be0bcac#gistcomment-3207693
task codeCoverageReport(type: JacocoReport) {
    // Gather execution data from all subprojects
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Add all relevant sourcesets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}