plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "io.freefair.lombok" version "5.1.0"
    id "org.sonarqube" version "2.7"
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation project(':kun-commons:kun-commons-utils')
    implementation project(':kun-app-common')
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.security:spring-security-ldap'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.ldap:spring-ldap-core'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.postgresql:postgresql:42.2.12'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'com.google.code.gson:gson'
    implementation 'commons-io:commons-io:2.6'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation enforcedPlatform('io.zonky.test.postgres:embedded-postgres-binaries-bom:11.6.0')
    testImplementation 'io.zonky.test:embedded-database-spring-test:1.5.4'
}

test {
    useJUnitPlatform()
}

apply plugin: "org.sonarqube"
sonarqube {
    properties {
        property "sonar.sourceEncoding", "src/main"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.java.binaries", "build"
    }
}
